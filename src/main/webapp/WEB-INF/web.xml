<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--关于前端控制器的解释
        springmvc设计的理念是希望开发者远离原生的servletAPI,API不是很好用,繁琐点,将操作进一步的简化,它将很多东西责任进行了拆分,不希望我们将一些技术点绑定死,可以做到随意切换,本身还是基于Servlet设计的,分发的servlet
    -->

    <!--默认规则要求在web-inf下,但是maven项目的标准应该在resources下面,如何解决这个问题?
        重新指定上下文配置的位置-->
    <!--配置一个前端控制器-->
    <servlet>
        <!--这里写的这个名字是有讲究的,如果我们不去修改spring配置文件默认的位置,那么springmvc他会去web-inf下面找一个叫做springmvc-servlet.xml文件-->
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--springmvc配置文件名字的问题
            默认情况下是用dispatcherServlet的名字当做命名空间
            springmvc-servlet.xml(WEB-INF)之下寻找
            springmvc-servlet=namespace
        -->
        <!--<init-param>-->
            <!--<param-name>namespace</param-name>-->
            <!--<param-value>mvc</param-value>&lt;!&ndash;指定之后名字为mvc.xml&ndash;&gt;-->
        <!--</init-param>-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:mvc.xml</param-value><!--重新指定上下文配置的位置和名称-->
            <!--此时是在类路径下寻找mvc.xml这个配置文件,推荐使用-->
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--Servlet映射配置-->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!--这里我们统一写斜杠,千万不要写成/*,
        /用于处理所有的请求,但是和/*不一样,他处理完之后要出去的时候不会再去将这个xxx.jsp当做一个新的请求,将这个渲染的结构直接返回给浏览器
        *.do的用法这种方式,是有团队习惯将请求的行为加个小尾巴用来区分-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- 配置过滤器 将POST请求转换为PUT和DELETE请求 -->
    <filter>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--解决中文乱码问题-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>